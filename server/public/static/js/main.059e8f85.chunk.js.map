{"version":3,"sources":["Pages/Home.jsx","components/Footer.jsx","Logo.png","components/NavBar_LoggedIn.jsx","components/NavBar_LoggedOut.jsx","components/NavBar.jsx","components/Login.jsx","Pages/LoginPage.jsx","components/UpdateContact.jsx","components/showDepartmentEmps.jsx","components/EmpProfile.jsx","Pages/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","Footer","class","clearSession","sessionStorage","clear","window","location","href","NavBarLoggedIn","Navbar","expand","Toggle","alt","src","logo","id","Nav","Item","Link","getItem","type","onClick","NavBarLoggedOut","NavBar","Login","history","useHistory","useForm","register","handleSubmit","axios","require","alert","useAlert","onSubmit","data","post","then","res","length","console","log","setItem","emplname","empfname","empid","push","pathname","reload","error","placeholder","name","required","bsSize","variant","primary","LoginPage","UpdateContact","React","useState","PModal","setPShow","CloseP","empNewPhone","newPhoneSet","empNewEmail","newEmailSet","auth","useEffect","a","fetch","method","response","json","phone","email","fetchMyAPI","Modal","show","onHide","centered","Header","closeButton","Title","Body","put","defaultValue","Button","ShowDeparmentEmps","isManager","DeptEmployees","DeptEmpSet","ModifyEmp","EMPModal","setShow","CloseEMP","key","setKey","fetchDeptEmployees","Tabs","activeKey","onSelect","k","Tab","eventKey","title","Table","striped","hover","map","empphone","EmpProfile","emp","dataSet","empManager","ManagerSet","managerData","mdata","mid","fetchMyManager","deptname","manager","Profile","App","props","state","apiResponse","text","setState","this","callAPI","options","timeout","position","positions","BOTTOM_RIGHT","template","AlertTemplate","Fragment","basename","process","exact","path","component","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.059e8f85.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//import axios from 'axios';\n\n\nexport const Home = () =>(\n    <div className=\"text-center homepage \">\n    \n  \n\n      <h1 >HR Management App <br/>\n      for managing your team menbers </h1>\n       \n       \n      \n\n    </div> \n          \n       \n    \n    )\nexport default Home;\n","import React from 'react';\n\n\nexport const Footer = () => (\n\n    <footer className='footer mt-auto py-3' >\n       <div class=\"footer-copyright text-center py-3\">      &copy; HR Management App - Xinyi Liang</div>\n    </footer>\n\n\n    )\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/Logo.0e4e7047.png\";","import React from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport logo from '../Logo.png';\n\nconst clearSession=() =>{\n    sessionStorage.clear();\n    window.location.href = '/';\n}\nexport const NavBarLoggedIn = () => (\n\n    \n        <Navbar expand = 'lg' >\n           \n           <Navbar.Toggle   data-toggle=\"collapse\" data-target=\"#navbarNav\" /> \n           <img className=\"logo\" alt=\"Logo\" src={logo} />\n           <h1 className=\"Nav-title\">HR Management</h1>\n           \n            <div class=\"collapse navbar-collapse navItemStyle\" id=\"navbarNav\" >\n            {/* <Navbar.Collapse class=\" collapse navbar-collapse navItemStyle\" id='navbarNav'> */}\n            <Nav className=\"  ml-auto\"  >\n                \n                <Nav.Item><Nav.Link href=\"./\">Home </Nav.Link></Nav.Item>\n                <Nav.Item><Nav.Link href=\"./About\">About </Nav.Link></Nav.Item>\n    \n\n                <Nav.Item><Nav.Link href=\"./Profile\">Hello! {sessionStorage.getItem(\"name\")} </Nav.Link></Nav.Item>\n                {/* <button id=\"loginBtn\" type=\"button\" class=\"btn btn-outline-warning\" onClick={(e) => sessionStorage.clear()}>Log Out</button> */}\n                <button id=\"logOutBtn\" type=\"button\" class=\"btn btn-outline-warning\" onClick={clearSession}>Log Out</button>\n                </Nav>\n\n                {/* </Navbar.Collapse> */}\n                </div>\n        </Navbar>\n     \n    )\n\nexport default NavBarLoggedIn;\n\n\n","import React from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport logo from '../Logo.png';\n\n\nexport const NavBarLoggedOut = () => (\n\n    \n        <Navbar className=\"navbar\" expand = 'lg' >\n           <Navbar.Toggle   data-toggle=\"collapse\" data-target=\"#navbarNav\"   /> \n           <img className=\"logo\" alt=\"Logo\" src={logo} />\n           <h1 className=\"Nav-title\">HR Management</h1>\n            <div class=\"collapse navbar-collapse navItemStyle\" id=\"navbarNav\" >\n            <Nav className=\"  ml-auto\"  >\n                \n                <Nav.Item><Nav.Link href=\"./\">Home </Nav.Link></Nav.Item>\n                <Nav.Item><Nav.Link href=\"./\">About </Nav.Link></Nav.Item>\n                \n               {/* <button id=\"loginBtn\" type=\"button\" class=\"btn btn-info btn-rounded\">Log In</button> */}\n               <Nav.Item ><Nav.Link  className=\"btn btn-info  text-white\" href=\"./Login\">Log In</Nav.Link></Nav.Item>\n               \n                </Nav>\n                </div>\n        </Navbar>\n     \n    )\n\nexport default NavBarLoggedOut;\n\n\n","import React from 'react';\r\nimport NavBarLoggedIn from './NavBar_LoggedIn'\r\nimport NavBarLoggedOut from './NavBar_LoggedOut'\r\n\r\n export function NavBar (){\r\n\r\n\r\n           const isLogedIn = sessionStorage.getItem('auth');\r\n           \r\n           if(isLogedIn === 'true'){\r\n                return( <NavBarLoggedIn/>)\r\n               \r\n            }else{\r\n                return( <NavBarLoggedOut/>)\r\n               \r\n            }\r\n    \r\n        \r\n    \r\n        \r\n \r\n }\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Button } from 'react-advanced-form-addons'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useAlert } from 'react-alert';\r\n\r\n\r\nexport function Login() {\r\n\r\n  let history = useHistory();\r\n  const { register, handleSubmit} = useForm();\r\n  const axios = require('axios');\r\n  \r\n\r\n  const alert = useAlert();\r\n  \r\n  const loginUser= (data)=> {\r\n\r\n    return axios.post(`/get/LoginEmpCheckId`,data)\r\n        .then(res => {\r\n          if (res.data.length === 1)\r\n          {\r\n            axios.post('/get/userLogin', data)\r\n            //.then(res => res.json())\r\n            .then(res => {\r\n              console.log(res.data);\r\n             if (res.data.length === 1) \r\n               {\r\n                // console.log('user exists');\r\n                 sessionStorage.setItem(\"auth\", \"true\");\r\n                 sessionStorage.setItem(\"name\",res.data[0].emplname + \" \" + res.data[0].empfname);\r\n                 sessionStorage.setItem(\"empid\",res.data[0].empid);\r\n                 history.push({ \r\n                   pathname: '/Profile',\r\n                 })\r\n                 window.location.reload();\r\n               }\r\n             else\r\n             {\r\n              // console.log('user not exist!!!' );  \r\n               alert.error(\"Wrong Password!\");\r\n             }\r\n           });\r\n          }\r\n          else\r\n           {\r\n            alert.error(\"Employee ID does not exist\");\r\n           }\r\n        })\r\n    \r\n    \r\n  }\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div id=\"LoginForm\">\r\n      \r\n      <form onSubmit={handleSubmit(loginUser)}>\r\n      \r\n      \r\n         <input type=\"text\" \r\n                 placeholder=\"Employee ID\"\r\n                 name=\"empid\" \r\n                 {...register(\"empid\", {\r\n                  required: \"Required\",\r\n                })}\r\n        \r\n          />\r\n       <br />\r\n      <input type=\"password\" \r\n             placeholder=\"Password\"\r\n             name=\"password\" \r\n             {...register(\"password\", {\r\n              required: \"Required\",\r\n            })}\r\n         \r\n          />\r\n         <br />\r\n      \r\n        <Button bsSize=\"large\" variant=\"success\" type=\"submit\" primary  >Login</Button>\r\n       \r\n        </form>\r\n       \r\n    </div>\r\n  );\r\n}\r\n       \r\nexport default Login;\r\n\r\n\r\n","import React from 'react';\nimport Login from '../components/Login';\nimport logo from '../Logo.png';\n\n\nexport const LoginPage = () =>(\n    <div className=\"LoginPageContainer\">\n           <div className=\"LoginComponent\">\n                 <a href=\"/\">\n                 <div className=\"login-Title\">\n                     <img className=\"LoginLogo\" alt=\"Logo\" src={logo} />\n                     <h2>HR Management App</h2>\n                 </div>\n                 </a>\n               \n               <h1>Log In </h1>\n              \n               <Login />\n            \n           </div>\n\n      \n     </div>\n    )\nexport default LoginPage;\n","import React ,{ useEffect, useState } from 'react';\r\nimport { Button, Modal} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function UpdateContact(){\r\n\r\n    const [PModal, setPShow] = React.useState(false);\r\n    const CloseP = () => setPShow(false);\r\n    const OpenP = () => setPShow(true);\r\n\r\n    const [empNewPhone, newPhoneSet] = useState();\r\n    const [empNewEmail, newEmailSet] = useState();\r\n\r\n    const empid = sessionStorage.getItem('empid');\r\n    const auth = sessionStorage.getItem('auth');\r\n    const { register, handleSubmit} = useForm();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(auth === 'true'){\r\n        async function fetchMyAPI() {\r\n        let response = await fetch(`/get/getEmployeeInfo/${empid}`, {\r\n            method:'GET'\r\n            }).then(response => response.json()).then(data => {\r\n                \r\n                newPhoneSet(data.phone);\r\n                newEmailSet(data.email);\r\n            \r\n            })               \r\n        }\r\n     \r\n        fetchMyAPI();\r\n   \r\n       }else{\r\n           history.push('/Login')\r\n            }\r\n     }, [])\r\n\r\n    const UpdateContact= (data)=> {\r\n        return axios.put(`/put/UpdateEmpContact/${empid}`,  data)\r\n           //.then(res => res.json())\r\n           .then(res => {\r\n             console.log(res.data);\r\n            \r\n             CloseP();\r\n             window.location.reload();\r\n          });  \r\n      }\r\n\r\n    return (\r\n       <>\r\n        \r\n         <button id=\"UpdateBtn\" type=\"button\" class=\"btn btn-success btn-sm\" \r\n          onClick={OpenP}>Update\r\n         </button>\r\n\r\n        <Modal\r\n        show={PModal}\r\n        onHide={CloseP}\r\n       \r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        \r\n      >\r\n        <Modal.Header  closeButton>\r\n          <Modal.Title>Update Profile</Modal.Title>\r\n        </Modal.Header>\r\n     \r\n        <Modal.Body>\r\n       \r\n        <form onSubmit={handleSubmit(UpdateContact)} class=\"container\">\r\n    \r\n        <label class=\"col-4 text-right\">Phone Number:</label>\r\n        <input \r\n             type=\"text\" \r\n             class=\"col-8\"\r\n             name=\"phone\" \r\n             defaultValue = {empNewPhone}\r\n            {...register(\"newPhone\", {\r\n              required: \"Required\",\r\n            })}\r\n          \r\n     />\r\n       <br/>\r\n     \r\n       <label class=\"col-4 text-right\">Email:</label>\r\n       <input \r\n           type=\"email\" \r\n           class=\"col-8 \"\r\n           name=\"email\" \r\n           defaultValue={empNewEmail}\r\n           {...register(\"newEmail\", {\r\n            required: \"Required\",\r\n           })} \r\n       />\r\n  \r\n       <br/>\r\n \r\n       <button  class=\"mx-auto d-block mt-3 btn btn-success btn-sm\" bsSize=\"large\" \r\n               type=\"submit\" primary id=\"UpdateBtn\"  >Update</button>\r\n  \r\n   </form>\r\n        </Modal.Body>\r\n\r\n     \r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={CloseP}>\r\n            Close\r\n          </Button>\r\n       \r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      </>\r\n    );\r\n\r\n    }\r\n\r\nexport default UpdateContact;\r\n","import { useHistory } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {Tabs, Tab, Table} from 'react-bootstrap';\r\nimport { Button, Modal} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nexport function ShowDeparmentEmps (){\r\n\r\n    const { register, handleSubmit} = useForm();\r\n    const isManager = sessionStorage.getItem('isManager');\r\n    const auth = sessionStorage.getItem('auth');\r\n    const history = useHistory();\r\n    const empid = sessionStorage.getItem('empid');\r\n    const [DeptEmployees, DeptEmpSet] = useState([]);\r\n    const [ModifyEmp, ModifyEmpSet] = useState([]);\r\n\r\n    const [EMPModal, setShow] = React.useState(false);\r\n    const CloseEMP = () => setShow(false);\r\n    const OpenEMP = () => setShow(true);\r\n\r\n\r\n    const [key, setKey] = useState('AllEmployees');\r\n\r\n    useEffect(() => {\r\n        if(auth === 'true'){\r\n        async function fetchDeptEmployees() { \r\n             await fetch(`/get/getDeptEmployees/${empid}`, {\r\n                method:'GET'\r\n                }).then(data => data.json()).then(data => {\r\n                    DeptEmpSet(data);\r\n                    console.log(data);\r\n                    \r\n                })\r\n            }\r\n       \r\n            fetchDeptEmployees();\r\n        \r\n}else{\r\n    history.push('/Login')\r\n}\r\n\r\n\r\n}, [])\r\n\r\nconst handleModify= (data)=> {\r\n\r\n  console.log(data)\r\n  ModifyEmpSet(data);\r\n  OpenEMP();\r\n}\r\n\r\nconst handleSubmitModifyEmp= ()=>{\r\n\r\n}\r\n\r\n    if(isManager=='true'){\r\n         return( \r\n            <div class=\"container pt-2 pl-2 pr-2\">\r\n             <div class=\"row\"> \r\n            <Tabs\r\n            id=\"controlled-tab-example\"\r\n            activeKey={key}\r\n            onSelect={(k) => setKey(k)}\r\n            className=\"mt-3 ManagerMenu\" \r\n      \r\n          >\r\n            <Tab eventKey=\"AllEmployees\" title=\"All Employees\">\r\n              <br/>\r\n            <Table striped hover id=\"deptEmpTable\">\r\n            <thead>\r\n                  <tr>\r\n                   <th>ID</th>\r\n                   <th>First Name</th>\r\n                   <th>Last Name</th>\r\n                   <th>Job Title</th>\r\n                   <th></th>\r\n                   <th></th>\r\n                  </tr>\r\n             </thead>\r\n             <tbody>\r\n            {DeptEmployees.map(data =>(\r\n                   <tr >\r\n                     \r\n                     <td>{data.empid}</td> \r\n                     <td>{data.empfname}</td> \r\n                     <td>{data.emplname}</td> \r\n                     <td>{data.title}</td> \r\n                     \r\n                     {/* <td><button type=\"button\" class=\"btn btn-info\"\r\n                          onClick={() => {handleModify(data)}}>Modify\r\n                         </button></td>\r\n\r\n                     <td><button type=\"button\" class=\"btn btn-danger\">Delete</button></td> */}\r\n                    </tr>\r\n              ))}\r\n               \r\n              \r\n              </tbody>\r\n            </Table>\r\n            </Tab>\r\n\r\n            <Tab eventKey=\"Modified\" title=\"Modified\">\r\n              <p>modified</p>\r\n            </Tab>\r\n           \r\n          </Tabs>\r\n\r\n\r\n               \r\n\r\n{/* Modal: update a sepecific employee by his Manager */}\r\n\r\n<Modal\r\n  show={EMPModal}\r\n  onHide={CloseEMP}\r\n  aria-labelledby=\"contained-modal-title-vcenter\"\r\n  centered \r\n>\r\n \r\n  <Modal.Header  closeButton>\r\n  <Modal.Title>{ModifyEmp.empfname} {ModifyEmp.emplname} - Modify</Modal.Title>\r\n  </Modal.Header>\r\n\r\n<Modal.Body>\r\n\r\n<form onSubmit={handleSubmit(handleSubmitModifyEmp)} >\r\n    \r\n    <label class=\"col-4 text-right\">Phone Number: {ModifyEmp.empphone}</label>\r\n    \r\n   <br/>\r\n \r\n   <label class=\"col-4 text-right\">Email:</label>\r\n\r\n\r\n   <br/>\r\n\r\n   <button  class=\"mx-auto d-block mt-3 btn btn-success btn-sm\" bsSize=\"large\" \r\n           type=\"submit\" primary id=\"UpdateBtn\"  >Update</button>\r\n\r\n</form>\r\n</Modal.Body>\r\n\r\n\r\n<Modal.Footer>\r\n<Button variant=\"secondary\" onClick={CloseEMP}>\r\nClose\r\n</Button>\r\n\r\n</Modal.Footer>\r\n</Modal>\r\n\r\n\r\n          </div> \r\n          </div>\r\n            )\r\n        \r\n     }else{\r\n         return( <div> not a  manager </div>)\r\n        \r\n     }\r\n\r\n\r\n}\r\n\r\nexport default ShowDeparmentEmps;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {UpdateContact} from './UpdateContact';\r\nimport {ShowDeparmentEmps} from './showDepartmentEmps';\r\nexport function EmpProfile() {\r\n\r\n \r\n        const [emp, dataSet] = useState([])\r\n        const [empManager, ManagerSet] = useState([])\r\n        \r\n\r\n        const empid = sessionStorage.getItem('empid');\r\n        const auth = sessionStorage.getItem('auth');\r\n\r\n        const history = useHistory();\r\n\r\n        useEffect(() => {\r\n            if(auth === 'true'){\r\n            async function fetchMyAPI() {\r\n             await fetch(`/get/getEmployeeInfo/${empid}`, {\r\n                method:'GET'\r\n                }).then(response => response.json()).then(data => {\r\n                    \r\n                    dataSet(data);\r\n                   \r\n                })               \r\n            }\r\n            async function fetchMyManager() {\r\n                 await fetch(`/get/getEmployeeManager/${empid}`, {\r\n                    method:'GET'\r\n                    }).then(managerData => managerData.json()).then(mdata => {\r\n    \r\n                        ManagerSet(mdata);\r\n                        if(mdata.mid == empid )\r\n                        sessionStorage.setItem(\"isManager\",true);\r\n                        else\r\n                        sessionStorage.setItem(\"isManager\",false);\r\n                        \r\n                    })\r\n                }\r\n            \r\n            fetchMyManager();\r\n            fetchMyAPI();\r\n       \r\n      \r\n    }else{\r\n        history.push('/Login')\r\n    }\r\n}, [])\r\n\r\n\r\n        return (\r\n        \r\n         <div class=\"container profile \">\r\n            \r\n            <div class=\"row row-eq-height \">\r\n                     <div class=\" col col-sm-12 col-md-12 col-lg-3 profilerow\">\r\n                         <span>\r\n                        <h2>Hello,</h2>\r\n                        <h1>{emp.empfname} {emp.emplname}</h1>\r\n                        </span>\r\n                     </div>\r\n                     \r\n                     <div class=\" col col-sm-12 col-md-12 col-lg-8 empinfo \">\r\n                     \r\n                     <div class=\"container p-md-4 p-2\"> \r\n\r\n                        <div class=\"row pb-2\">\r\n                              <div class=\"col-5 col-sm-3 col-md-3 col-lg-2 \">Employee ID:</div>\r\n                              <div class=\"col-7 col-sm-8 col-md-8 col-lg-9 \"> {emp.empid}</div>\r\n\r\n                         </div>\r\n\r\n                         <div class=\"row pb-2\">\r\n                              <div class=\"col-5 col-sm-3 col-md-3 col-lg-2 \">Department:</div>\r\n                              <div class=\"col-7 col-sm-8 col-md-8 col-lg-9 \"> {emp.deptname}</div>\r\n\r\n                         </div>\r\n                         <div class=\"row pb-2\">\r\n                              <div class=\"col-5 col-sm-3 col-md-3 col-lg-2 \">Job Title:</div>\r\n                              <div class=\"col-7 col-sm-8 col-md-8 col-lg-9 \"> {emp.title}</div>\r\n\r\n                         </div>\r\n                         <div class=\"row pb-2\">\r\n                              <div class=\"col-5 col-sm-3 col-md-3 col-lg-2 \">Manager:</div>\r\n                              <div class=\"col-7 col-sm-8 col-md-8 col-lg-9 \"> {empManager.manager} </div>\r\n\r\n                         </div>\r\n                      </div>\r\n\r\n                       \r\n                      <div class=\"container p-2\">\r\n                               <div class=\"row ContactInfo\">\r\n                                 <h3 pb-2>Contact Info</h3>\r\n                             <UpdateContact />\r\n                       </div>\r\n                       <div class=\"row pt-2 pb-2\">\r\n                              <div class=\"col-5 col-sm-3 col-md-3 col-lg-2  \">Phone:</div>\r\n                              <div class=\"col-7 col-sm-8 col-md-8 col-lg-9 \"> {emp.phone}</div>\r\n\r\n                         </div>\r\n                         <div class=\"row pb-2\">\r\n                              <div class=\"col-5 col-sm-3 col-md-3 col-lg-2 \">Email:</div>\r\n                              <div class=\"col-7 col-sm-8 col-md-8 col-lg-9 \"> {emp.email}</div>\r\n\r\n                         </div>\r\n                     </div>\r\n\r\n                       <ShowDeparmentEmps />\r\n\r\n                     </div>\r\n    \r\n                     \r\n            </div>\r\n                                           \r\n       \r\n\r\n        </div>  \r\n            \r\n        )\r\n\r\n       \r\n    \r\n}\r\n\r\nexport default EmpProfile;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {EmpProfile} from '../components/EmpProfile'\r\n\r\nexport const Profile = () =>(\r\n      \r\n          <EmpProfile />\r\n\r\n\r\n    )\r\nexport default Profile;\r\n","import React,{Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {Home} from './Pages/Home';\nimport {Footer} from './components/Footer';\nimport {NavBar} from './components/NavBar';\nimport { LoginPage } from './Pages/LoginPage';\nimport { Profile } from './Pages/Profile';\nimport './App.css';\n\nimport { positions, Provider} from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nclass  App extends Component {\n\n  \n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n}\n\ncallAPI() {\n  fetch(\"/\")\n      .then(res => res.text())\n      .then(res => this.setState({ apiResponse: res }));\n      \n}\n\ncomponentWillMount() {\n  this.callAPI();\n \n}\n  render(){\n\n    \n    const options = {\n      timeout: 3000,\n      position: positions.BOTTOM_RIGHT\n    };\n    return (\n      <Provider template={AlertTemplate} {...options}> \n         <React.Fragment >\n          <NavBar />\n          \n  \n          <Router basename={process.env.PUBLIC_URL}>\n                \n                       <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/Login\" component={LoginPage} />\n                            <Route exact path=\"/Profile\" component={Profile} />\n                        </Switch>\n\n                  \n            </Router>\n           \n         <Footer />\n          \n       </React.Fragment> \n     </Provider>\n    );\n  }\n  }\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\nserviceWorker.unregister();"],"sourceRoot":""}